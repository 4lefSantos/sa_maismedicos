base_tratada7 <-
base_tratada6 |>
left_join(prorrogacao_ciclo18,
by = c("nomeprof" = "NOME")) |>
mutate(Prorrogado = ifelse(is.na(Prorrogado),
"NÃO",
Prorrogado))
base_tratada8 <-
base_tratada7 |>
filter(tp_unid == "01"|
tp_unid == "02"|
tp_unid == "32"|
tp_unid == "71"|
tp_unid == "72"|
tp_unid == "74")
group_by(cpf_prof) |>
slice_min(order_by = competen,
with_ties = FALSE)
View(base_tratada)
base_tratada2 <-
base_tratada |>
filter(CPF_PROF %in% temp$CPF_PROF) |>
janitor::clean_names() |>
mutate(ano = year(competen)) |>
mutate(ch_total = horahosp +
hora_amb +
horaoutr) |>
select(ano, competen, codufmun, ibge_aloc,
municipio_destino, uf_destino,
cnes, tp_unid, fantasia, nomeprof, cns_prof,
cpf_prof, data_nascimento,
data_formacao, participou_pmmb,
sexo, ch_total) |>
filter(competen > '2019-05-01')
base_tratada <- CNES_cpf |>
left_join(cns_inscricao,
by = c("CPF_PROF" = "CPF_PROF"))
# Convertendo competência para formato data
base_tratada$COMPETEN <-
as.Date(paste0(base_tratada$COMPETEN, "01"),
format = "%Y%m%d")
# metodo para identificar quem foi selecionado e de fato foi para o programa, inclusive sendo alocado em APS
temp <-
base_tratada |>
mutate(aps = if_else((TP_UNID == "02" |
TP_UNID == "01" |
TP_UNID == "32" |
TP_UNID == "71" |
TP_UNID == "72" |
TP_UNID == "74"),
"APS", "Outros")) |>
mutate(ano = year(COMPETEN)) |>
mutate(assumiu_programa =
if_else(ano == 2019 &
aps == 'APS' &
CODUFMUN == ibge_aloc,
"Foi alocado", "Não foi alocado")) |>
filter(assumiu_programa == "Foi alocado") |>
group_by(NOMEPROF, CPF_PROF, CNS_PROF) |>
slice_min(COMPETEN)
#Filtrando a base apenas com os médicos ingressantes
base_tratada2 <-
base_tratada |>
filter(CPF_PROF %in% temp$CPF_PROF) |>
janitor::clean_names() |>
mutate(ano = year(competen)) |>
mutate(ch_total = horahosp +
hora_amb +
horaoutr) |>
select(ano, competen, codufmun, ibge_aloc,
municipio_destino, uf_destino,
cnes, tp_unid, fantasia, nomeprof, cns_prof,
cpf_prof, data_nascimento,
data_formacao, participou_pmmb,
sexo, ch_total) |>
filter(competen > '2019-05-01')
atuacao <-
base_tratada |>
mutate(ano = year(COMPETEN)) |>
filter(ano < 2019 & CODUFMUN == ibge_aloc) |>
group_by(COMPETEN, ibge_aloc, CPF_PROF) |>
count() |>
group_by(ibge_aloc, CPF_PROF) |>
count() |>
mutate(atuacao_previa_no_municipio = "Sim") |>
mutate(anos_atuacao = n/12) |>
ungroup() |>
select(-ibge_aloc, -n)
base_tratada3 <-
base_tratada2 |>
left_join(atuacao,
by = c("cpf_prof"="CPF_PROF")) |>
mutate(atuacao_previa_no_municipio =
if_else(atuacao_previa_no_municipio == "Sim","Sim","Não"))
base_tratada3$atuacao_previa_no_municipio[is.na(base_tratada3$atuacao_previa_no_municipio)] <- "Não"
base_tratada3$anos_atuacao[is.na(base_tratada3$anos_atuacao)] <- 0
vinculos_cidade <-
base_tratada2 |>
filter(competen > '2019-05-01') |>
group_by(cpf_prof, competen,
codufmun, ibge_aloc) |>
count() |>
ungroup() |>
filter(codufmun == ibge_aloc) |>
select(cpf_prof, competen, n) |>
group_by(cpf_prof) |>
summarise(media = mean(n))
base_tratada4 <-
base_tratada3 |>
left_join(vinculos_cidade,
by = c("cpf_prof"))
meses_trabalho <-
base_tratada2 |>
group_by(cpf_prof) |>
mutate(
meses_no_local_alocado =
interval(
min(competen[codufmun == ibge_aloc]),
max(competen[codufmun == ibge_aloc])) %/% months(1)) |>
ungroup() |>
select(cpf_prof, meses_no_local_alocado) |>   distinct()
base_tratada4 <-
base_tratada3 |>
left_join(meses_trabalho,
by = c("cpf_prof"))
churn <-
base_tratada2 |>
filter(competen == "2023-12-01") |>
mutate(churn =
if_else(codufmun == ibge_aloc,
"migrou",
"permanece")) |>
select(cpf_prof, churn) |>
distinct() |>
# Se o individuo estiver atuando no mesmo municipio e em outra localidade limitrofe, vamos marcar como "permanece". O codigo abaixo faz isso
arrange(cpf_prof, churn) |>
group_by(cpf_prof) |>
slice(1) |>
ungroup()
base_tratada5 <-
base_tratada4 |>
left_join(churn,
by = c("cpf_prof"))
base_tratada5$churn[is.na(base_tratada5$churn)] <- "migrou"
idade <-
base_tratada2 |>
group_by(cpf_prof) |>
slice_min(order_by = competen,
with_ties = FALSE) |>
ungroup() |>
mutate(idade_em_anos =
as.numeric(difftime(competen,
data_nascimento,
units = "days")) / 365.25) |>
select(cpf_prof, idade_em_anos) |>
distinct()
base_tratada6 <-
base_tratada5 |>
left_join(idade,
by = c("cpf_prof"))
prorrogacao_ciclo18 <-
read_excel("~/GitHub/sa_maismedicos/01_dados/Editais/2019/prorrogacao_ciclo18.xlsx")
base_tratada7 <-
base_tratada6 |>
left_join(prorrogacao_ciclo18,
by = c("nomeprof" = "NOME")) |>
mutate(Prorrogado = ifelse(is.na(Prorrogado),
"NÃO",
Prorrogado))
base_tratada8 <-
base_tratada7 |>
filter(tp_unid == "01"|
tp_unid == "02"|
tp_unid == "32"|
tp_unid == "71"|
tp_unid == "72"|
tp_unid == "74")
group_by(cpf_prof) |>
slice_min(order_by = competen,
with_ties = FALSE)
View(base_tratada7)
base_tratada8 <-
base_tratada7 |>
filter(tp_unid == "01"|
tp_unid == "02"|
tp_unid == "32"|
tp_unid == "71"|
tp_unid == "72"|
tp_unid == "74") |>
group_by(cpf_prof) |>
slice_min(order_by = competen,
with_ties = FALSE)
View(base_tratada8)
equipe_saude3 <-
equipe_saude2 |>
filter(CNES %in% base_tratada8$cnes) |>
group_by(CNES, categoria) |>
summarise(FTE40 = mean(FTE40)) |>
ungroup() |>
pivot_wider(names_from = categoria,
values_from = FTE40) |>
mutate(across(2:5, ~ ifelse(is.na(.), 0, .)))
View(equipe_saude3)
base_tratada2 <-
base_tratada |>
filter(CPF_PROF %in% temp$CPF_PROF) |>
janitor::clean_names() |>
mutate(ano = year(competen)) |>
mutate(ch_total = horahosp +
hora_amb +
horaoutr) |>
select(ano, competen, codufmun, ibge_aloc,
municipio_destino, uf_destino,
cnes, tp_unid, fantasia, nomeprof, cns_prof,
cpf_prof, data_nascimento,
data_formacao, participou_pmmb,
sexo, ch_total) |>
filter(competen >= '2019-01-01')
base_tratada3 <-
base_tratada2 |>
left_join(atuacao,
by = c("cpf_prof"="CPF_PROF")) |>
mutate(atuacao_previa_no_municipio =
if_else(atuacao_previa_no_municipio == "Sim","Sim","Não"))
base_tratada3$atuacao_previa_no_municipio[is.na(base_tratada3$atuacao_previa_no_municipio)] <- "Não"
base_tratada3$anos_atuacao[is.na(base_tratada3$anos_atuacao)] <- 0
vinculos_cidade <-
base_tratada2 |>
filter(competen > '2019-05-01') |>
group_by(cpf_prof, competen,
codufmun, ibge_aloc) |>
count() |>
ungroup() |>
filter(codufmun == ibge_aloc) |>
select(cpf_prof, competen, n) |>
group_by(cpf_prof) |>
summarise(media = mean(n))
base_tratada4 <-
base_tratada3 |>
left_join(vinculos_cidade,
by = c("cpf_prof"))
meses_trabalho <-
base_tratada2 |>
group_by(cpf_prof) |>
mutate(
meses_no_local_alocado =
interval(
min(competen[codufmun == ibge_aloc]),
max(competen[codufmun == ibge_aloc])) %/% months(1)) |>
ungroup() |>
select(cpf_prof, meses_no_local_alocado) |>   distinct()
base_tratada4 <-
base_tratada3 |>
left_join(meses_trabalho,
by = c("cpf_prof"))
churn <-
base_tratada2 |>
filter(competen == "2023-12-01") |>
mutate(churn =
if_else(codufmun == ibge_aloc,
"migrou",
"permanece")) |>
select(cpf_prof, churn) |>
distinct() |>
# Se o individuo estiver atuando no mesmo municipio e em outra localidade limitrofe, vamos marcar como "permanece". O codigo abaixo faz isso
arrange(cpf_prof, churn) |>
group_by(cpf_prof) |>
slice(1) |>
ungroup()
base_tratada5 <-
base_tratada4 |>
left_join(churn,
by = c("cpf_prof"))
base_tratada5$churn[is.na(base_tratada5$churn)] <- "migrou"
idade <-
base_tratada2 |>
group_by(cpf_prof) |>
slice_min(order_by = competen,
with_ties = FALSE) |>
ungroup() |>
mutate(idade_em_anos =
as.numeric(difftime(competen,
data_nascimento,
units = "days")) / 365.25) |>
select(cpf_prof, idade_em_anos) |>
distinct()
base_tratada6 <-
base_tratada5 |>
left_join(idade,
by = c("cpf_prof"))
prorrogacao_ciclo18 <-
read_excel("~/GitHub/sa_maismedicos/01_dados/Editais/2019/prorrogacao_ciclo18.xlsx")
base_tratada7 <-
base_tratada6 |>
left_join(prorrogacao_ciclo18,
by = c("nomeprof" = "NOME")) |>
mutate(Prorrogado = ifelse(is.na(Prorrogado),
"NÃO",
Prorrogado))
base_tratada8 <-
base_tratada7 |>
filter(tp_unid == "01"|
tp_unid == "02"|
tp_unid == "32"|
tp_unid == "71"|
tp_unid == "72"|
tp_unid == "74") |>
group_by(cpf_prof) |>
slice_min(order_by = competen,
with_ties = FALSE)
equipe_saude2 <-
equipe_saude |>
select(CNES, ANO, categoria, FTE40) |>
mutate(categoria =
case_when(
categoria ==
"Técnico ou Auxiliar de Enfermagem" ~
"tec_aux_enf",
categoria ==
"Cirurgião Dentista" ~ "dentista",
categoria == "Agente Comunitário de Saúde" ~
"agente_saude",
categoria == "Enfermeiro" ~ "enfermeiro",
TRUE ~ NA)) |>
mutate(FTE40 = ifelse(is.na(FTE40), 0, FTE40))
equipe_saude3 <-
equipe_saude2 |>
filter(CNES %in% base_tratada8$cnes) |>
group_by(CNES, categoria) |>
summarise(FTE40 = mean(FTE40)) |>
ungroup() |>
pivot_wider(names_from = categoria,
values_from = FTE40) |>
mutate(across(2:5, ~ ifelse(is.na(.), 0, .)))
View(equipe_saude3)
base_tratada8 |>
left_join(equipe_saude3,
by = c("cnes"="CNES"))
base_tratada9 <-
base_tratada8 |>
left_join(equipe_saude3,
by = c("cnes"="CNES"))
View(base_tratada9)
View(base_tratada9)
View(base_tratada2)
base_tratada2 |>
select(competen, data_formacao)
base_tratada2 |>
mutate(
data_formacao = dmy(paste0("01/", data_formacao)),
competen = ymd(competen)) |>
group_by(cpf_prof) |>
slice_min(order_by = competen, with_ties = FALSE) |>
ungroup() |>
mutate(
anos_formado = as.numeric(difftime(competen, data_formacao, units = "days")) / 365.25
)
anos_formado <-
base_tratada2 |>
mutate(
data_formacao = dmy(paste0("01/", data_formacao)),
competen = ymd(competen)) |>
group_by(cpf_prof) |>
slice_min(order_by = competen, with_ties = FALSE) |>
ungroup() |>
mutate(
anos_formado = as.numeric(difftime(competen, data_formacao, units = "days")) / 365.25
) |>
select(cpf_prof, anos_formado)
base_tratada2 <- base_tratada2 |>
mutate(
data_formacao = dmy(paste0("01/", data_formacao)),
competen = ymd(competen)
) |>
group_by(cpf_prof) |>
slice_min(order_by = competen, with_ties = FALSE) |>
ungroup() |>
mutate(
anos_formacao = as.numeric(difftime(competen, data_formacao, units = "days")) / 365.25
) |>
select(cpf_prof, anos_formacao)
base_tratada7 |>
left_join(anos_formado, by = c("cpf_prof"))
hist(anos_formado$anos_formado)
base_tratada9 <-
base_tratada8 |>
filter(tp_unid == "01"|
tp_unid == "02"|
tp_unid == "32"|
tp_unid == "71"|
tp_unid == "72"|
tp_unid == "74") |>
group_by(cpf_prof) |>
slice_min(order_by = competen,
with_ties = FALSE)
View(base_tratada9)
base_tratada8 <-
base_tratada7 |>
left_join(anos_formado, by = c("cpf_prof"))
base_tratada9 <-
base_tratada8 |>
filter(tp_unid == "01"|
tp_unid == "02"|
tp_unid == "32"|
tp_unid == "71"|
tp_unid == "72"|
tp_unid == "74") |>
group_by(cpf_prof) |>
slice_min(order_by = competen,
with_ties = FALSE)
View(base_tratada9)
anos_formado <-
base_tratada2 |>
mutate(
data_formacao = dmy(paste0("01/", data_formacao)),
competen = ymd(competen)) |>
group_by(cpf_prof) |>
slice_min(order_by = competen, with_ties = FALSE) |>
ungroup() |>
mutate(anos_formacao =
as.numeric(difftime(competen,
data_formacao,
units = "days")) / 365.25) |>
mutate(anos_formacao = if_else(anos_formacao < 0,
0,
anos_formacao)) |>
select(cpf_prof, anos_formacao)
anos_formado <-
base_tratada2 |>
mutate(
data_formacao = dmy(paste0("01/", data_formacao)),
competen = ymd(competen)) |>
group_by(cpf_prof) |>
slice_min(order_by = competen, with_ties = FALSE) |>
ungroup() |>
mutate(anos_formacao =
as.numeric(difftime(competen,
data_formacao,
units = "days")) / 365.25) |>
mutate(anos_formacao = if_else(anos_formacao < 0,
0,
anos_formacao)) |>
select(cpf_prof, anos_formacao)
anos_formado <-
base_tratada2 |>
mutate(
data_formacao = dmy(paste0("01/", data_formacao)),
competen = ymd(competen)) |>
group_by(cpf_prof) |>
slice_min(order_by = competen, with_ties = FALSE) |>
ungroup() |>
mutate(anos_formacao =
as.numeric(difftime(competen,
data_formacao,
units = "days")) / 365.25) |>
mutate(anos_formacao = if_else(anos_formacao < 0,
0,
anos_formacao)) |>
select(cpf_prof, anos_formacao)
base_tratada2 <-
base_tratada |>
filter(CPF_PROF %in% temp$CPF_PROF) |>
janitor::clean_names() |>
mutate(ano = year(competen)) |>
mutate(ch_total = horahosp +
hora_amb +
horaoutr) |>
select(ano, competen, codufmun, ibge_aloc,
municipio_destino, uf_destino,
cnes, tp_unid, fantasia, nomeprof, cns_prof,
cpf_prof, data_nascimento,
data_formacao, participou_pmmb,
sexo, ch_total) |>
filter(competen >= '2019-01-01')
anos_formado <-
base_tratada2 |>
mutate(
data_formacao = dmy(paste0("01/", data_formacao)),
competen = ymd(competen)) |>
group_by(cpf_prof) |>
slice_min(order_by = competen, with_ties = FALSE) |>
ungroup() |>
mutate(anos_formacao =
as.numeric(difftime(competen,
data_formacao,
units = "days")) / 365.25) |>
mutate(anos_formacao = if_else(anos_formacao < 0,
0,
anos_formacao)) |>
select(cpf_prof, anos_formacao)
base_tratada8 <-
base_tratada7 |>
left_join(anos_formado, by = c("cpf_prof"))
base_tratada9 <-
base_tratada8 |>
filter(tp_unid == "01"|
tp_unid == "02"|
tp_unid == "32"|
tp_unid == "71"|
tp_unid == "72"|
tp_unid == "74") |>
group_by(cpf_prof) |>
slice_min(order_by = competen,
with_ties = FALSE)
View(base_tratada9)
View(CNES_cpf)
base_tratada10 <-
base_tratada9 |>
left_join(equipe_saude3,
by = c("cnes"="CNES"))
View(base_tratada9)
View(cns_inscricao)
